/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class raw_root_Node */

#ifndef _Included_raw_root_Node
#define _Included_raw_root_Node
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     raw_root_Node
 * Method:    getTypeName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_raw_root_Node_getTypeName
  (JNIEnv *, jobject);

/*
 * Class:     raw_root_Node
 * Method:    getName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_raw_root_Node_getName
  (JNIEnv *, jobject);

/*
 * Class:     raw_root_Node
 * Method:    isBasic
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_raw_root_Node_isBasic
  (JNIEnv *, jobject);

/*
 * Class:     raw_root_Node
 * Method:    isArray
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_raw_root_Node_isArray
  (JNIEnv *, jobject);

/*
 * Class:     raw_root_Node
 * Method:    getContainedType
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_raw_root_Node_getContainedType
  (JNIEnv *, jobject);

/*
 * Class:     raw_root_Node
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_raw_root_Node_initialize__
  (JNIEnv *, jobject);

/*
 * Class:     raw_root_Node
 * Method:    initialize
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_raw_root_Node_initialize__Ljava_lang_String_2
  (JNIEnv *, jobject, jstring);

/*
 * Class:     raw_root_Node
 * Method:    finalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_raw_root_Node_finalize
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif

#endif
